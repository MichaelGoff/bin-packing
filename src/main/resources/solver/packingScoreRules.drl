package solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.hardsoftdouble.HardSoftDoubleScoreHolder;

import domain.Packing;
import domain.Part;
import domain.Platform;

global HardSoftDoubleScoreHolder scoreHolder;

//*****************
// Hard Constraints
//*****************

rule "partOverlap"        //TODO: why does this produce a positive hard score?
    when
        $p1 : Part($id : id)
        $p2 : Part(id > $id)
        eval($p2.intersects($p1))

    then
        scoreHolder.addHardConstraintMatch(kcontext, -$p2.intersectArea($p1));
end

rule "outOfPlatformBoundsWidth"
    when
        $part : Part($id : id)
        eval($part.widthOverlapsPlatform())
    then
        scoreHolder.addHardConstraintMatch(kcontext, -$part.widthOverlap());
end

rule "outOfPlatformBoundsHeight"
    when
        $part : Part($id : id)
        eval($part.heightOverlapsPlatform())

    then
        scoreHolder.addHardConstraintMatch(kcontext, -$part.heightOverlap());
end

//*****************
// Soft Constraints
//*****************

rule "leftoverSpace"       //TODO: prevent it from multiplying by number of parts
    when
        $part : Part($partId : id)
        $platform : Platform($id : id) from $part.platform
    then
        scoreHolder.addSoftConstraintMatch(kcontext, -$platform.getLeftoverArea());
end

//******
// Other
//******

rule "platformRemoval"
    when
        $packing : Packing()
        $platform : Platform($id : id) from $packing.platformList
        eval($platform.isEmpty())
    then
        $packing.getPlatformList().remove($platform);
end